name: Deploy for

on:
  issue_comment:
    types:
      - created
  workflow_dispatch:
    inputs:
      deploy-destination:
        description: "the destination to deploy"
        required: true

jobs:
  prepare:
    name: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Foo
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          echo 'foo'
      - name: Validate comment
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        if: ${{ github.event_name == 'issue_comment' && github.event.issue.pull_request != null && startsWith(github.event.comment.body, '/deploy') }}
        run: |
          if echo ${{ github.event.comment.body }} | grep -q -E '^\/deploy\s+((\w|\d|\_|\-|\/)+)$'; then
            echo "OK. Deploy command is valid."
          else
            echo "NG. Deploy command is invalid. Cancelling the workflow ${{ github.run_id }}..."
            gh api repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/cancel -X POST
          fi
  trigger-deploy:
    name: trigger-deploy
    needs: [prepare]
    runs-on: ubuntu-latest
    steps:
      - name: Get the deploy destination
        id: get-deploy-destination
        run: |
          case ${{ github.event_name }} in
            'issue_comment' )
              echo 'issue_comment'
              # echo ::set-output name=deploy-destination::$(echo ${{ github.event.comment.body }} \
              #   | sed -e 's/^\/deploy[ \f\n\r\t]\+\([a-zA-Z0-9_\/-]\+\)$/\1/g')
              ;;
            'workflow_dispatch' )
              echo 'workflow_dispatch'
              ;;
            * )
              echo 'The event type must be issue_comment or workflow_dispatch'
              exit 1
              ;;
          esac
      - name: Get the branch name
        id: get-branch-name
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          case ${{ github.event_name }} in
            'issue_comment' )
              echo 'issue_comment'
              # echo ::set-output name=branch-name::$(gh api repos/${{ github.repository }}/pulls/${{ github.event.issue.number }} \
              #   | jq -r '.head.ref')
              ;;
            'workflow_dispatch' )
              echo 'workflow_dispatch'
              ;;
            * )
              echo 'The event type must be issue_comment or workflow_dispatch'
              exit 1
              ;;
          esac
      - name: Triggers CircleCI pipeline
        env:
          CIRCLECI_TOKEN: ${{ secrets.CIRCLECI_TOKEN }}
        run: |
          curl \
            -X POST \
            -H "Content-Type: application/json" \
            -H "Circle-Token: $CIRCLECI_TOKEN" \
            -d "{\"branch\": \"${{ steps.get-branch-name.outputs.branch-name }}\", \"parameters\": { \"run-deploy\": true, \"deploy-destination\": \"${{ steps.get-deploy-destination.outputs.deploy-destination }}\" } }" \
            https://circleci.com/api/v2/project/gh/${{ github.repository }}/pipeline \
            -w '%{http_code}\n'
